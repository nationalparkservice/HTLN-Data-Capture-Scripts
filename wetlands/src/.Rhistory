install.packages("devtools")
install.packages("devtools")
install.packages("tidayverse")
install.packages("tiday")
install.packages("tidy")
q()
install.packages("tidyverse")
library(tidyverse)
install.packages("palmerpenguins")
q()
hierarchy %>%
print(n = 10, width = Inf)
# this is a comment
# this file is my first R code for data science
library(tidyverse)
TSNhierarchy <- read_csv("C:\\Users\\growell\\HTLN-BreedingBird-Data-Package\\src\\Hierarchy_Taxa.csv")
# spec(TSNhierarchy)
hierarchy = as_tibble(TSNhierarchy)
hierarchy
hierarchy %>%
print(n = 10, width = Inf)
hierarchy %>%
View()
# figure out how to parse??
hierarchy %>%
View()
hierarchy |>
View()
hierarchy |>
mutate(
hierarchy_string2 = hierarchy_string,
)
hierarchy_string2
ierarchy |>
View()
hierarchy |>
View()
hierarchy
hierarchy |>
mutate(
hierarchy_string2 = hierarchy_string,
)
hierarchy |>
print(n = 10, width = Inf)
hierarchy |>
select(hierarchy_string)
hierarchy |>
select(hierarchy_string)
hierarchy |>
select(hierarchy_string)
print(n = 50, width = Inf)
hierarchy |>
select(hierarchy_string)
print(n = 20, width = Inf)
hierarchy |>
select(hierarchy_string)
hierarchy |>
select(hierarchy_string )
x <- hierarchy |>
select(hierarchy_string )
|.|
x <- hierarchy |>
select(hierarchy_string )
x
my_string <- hierarchy |>
select(hierarchy_string )
my_string
my_string |>
separate_wider_delim(
hierarchy_string,
delim = "-"
)
my_string |>
separate_wider_delim(
hierarchy_string,
delim = "-",
names = c("x", "y", "z"),
too_many = "drop"
)
my_string |>
separate_wider_delim(
hierarchy_string,
delim = "-",
names = c("col1", "col2", "col3", "col4",
"col5", "col6", "col7", "col8",
"col9", "col10", "col11" ),
too_many = "drop"
)
hierarchy
hierarchy |>
View()
my_string |>
separate_wider_delim(
hierarchy_string,
delim = "-",
names = c("col1", "col2", "col3", "col4",
"col5", "col6", "col7"),
too_many = "drop"
)
my_columns <- my_string |>
separate_wider_delim(
hierarchy_string,
delim = "-",
names = c("col1", "col2", "col3", "col4",
"col5", "col6", "col7"),
too_many = "drop"
)
my_columns
print(my_columns, nn = 207)
print(my_columns, n = 207)
my_columns <- my_string |>
separate_wider_delim(
hierarchy_string,
delim = "-",
names = c("col1", "col2", "col3", "col4",
"col5", "col6", "col7", "col8", "col9"),
too_many = "drop"
)
my_columns
print(my_columns, n = 207)
TSNlongnames
TSNlongnames <- read_csv(
"C:\\Users\\growell\\HTLN-BreedingBird-Data-Package\\src\\Hierarchy_Taxa.csv")
TSNlongnames <- read_csv(
"C:\\Users\\growell\\HTLN-BreedingBird-Data-Package\\src\\Itis_longnames.csv")
too_many = "drop"
hierarchy = as_tibble(TSNhierarchy)
TSNhierarchy <- read_csv(
"C:\\Users\\growell\\HTLN-BreedingBird-Data-Package\\src\\Hierarchy_Taxa.csv")
TSNlongnames <- read_csv(
"C:\\Users\\growell\\HTLN-BreedingBird-Data-Package\\src\\Itis_longnames.csv")
# select the hierarchy string column
# and parse the first 7 values in separate columns
hierarchy = as_tibble(TSNhierarchy)
longnames = as_tibble(TSNlongnames)
longnames
library(tidyverse)
TSNhierarchy <- read_csv(
"C:\\Users\\growell\\HTLN-BreedingBird-Data-Package\\src\\Hierarchy_Taxa.csv")
TSNlongnames <- read_csv(
"C:\\Users\\growell\\HTLN-BreedingBird-Data-Package\\src\\Itis_longnames.csv")
glimpse(TSNhierarchy)
glimpse(TSNlongnames)
hierarchy
my_columns <- my_string |>
separate_wider_delim(
hierarchy_string,
delim = "-",
names = c("col1", "col2", "col3", "col4",
"col5", "col6", "col7", "col8", "col9"),
too_many = "drop"
)
my_columns
print(my_columns, n = 207)
# This script processes the Active Projects dataset
library(tidyverse)
.libPaths()
q()
source("C:/Users/GRowell/Fast_import.R")
#See lines 2, 39, 41, 43, 45, and 51 to see if there is any information/code you need to change for your desired outputappendix.
#Imported the Excel files needed to make the appendix (the dataframe with all of the original data) and species look up table. Make necessary alterations in the import dataset field and name the appropriate data frames "appendix" and "SpeciesLookup" always!! Very important to keep the same title, will not work otherwise. Copy and paste the code at in the bottom left corner on the import dataset field window in for both dataframes and delete original code 3-10. REMEBEMBER TO USE THE NAMES "appendix" AND "SpeciesLookup" EXACTLY THE SAME!!!!
library(readxl)
appendix <- read_excel("~/Desktop/PIPE22appendix.xlsx",
sheet = "Sheet1", n_max = 14)
#See lines 2, 39, 41, 43, 45, and 51 to see if there is any information/code you need to change for your desired outputappendix.
#Imported the Excel files needed to make the appendix (the dataframe with all of the original data) and species look up table. Make necessary alterations in the import dataset field and name the appropriate data frames "appendix" and "SpeciesLookup" always!! Very important to keep the same title, will not work otherwise. Copy and paste the code at in the bottom left corner on the import dataset field window in for both dataframes and delete original code 3-10. REMEBEMBER TO USE THE NAMES "appendix" AND "SpeciesLookup" EXACTLY THE SAME!!!!
library(readxl)
appendix <- read_excel("PIPE22appendix.xlsx",
sheet = "Sheet1", n_max = 14)
install.packages("lubridate")
q()
install.packages("dataRetrieval")
q()
install.packages("data.table")
q()
install.packages("hrbrthemes")
q()
library(tidyverse)
setwd("../HTLN-Wetlands-Survey123/src")
load_file <- read_csv("Woody.csv")
glimpse(load_file)
# select columns for Access import
Access_data <- load_file |>
        select(WoodyModule, WoodySpecies, EditDate, WoodySiteName, ShrubClump, D0to1,
               D1to2_5, D2_5to5, D5to10, D10to15, D15to20, D20to25, D25to30, D30to35,
               D35to40, Dgt40, Dgt40_1, Dgt40_2, Dgt40_3, Dgt40_4, Dgt40_5)
Access_data <- Access_data |>
  mutate( FeatureID = WoodySiteName) |>
  mutate(EditDate = (EditDate <- as.Date(EditDate, format = "%m/%d/%Y")))
glimpse(Access_data)
# Substitute NA with -9999 in all dbl variable
Access_data$ShrubClump <- Access_data$ShrubClump |> replace_na(-9999)
Access_data$D0to1 <- Access_data$D0to1 |> replace_na(-9999)
Access_data$D1to2_5 <- Access_data$D1to2_5 |> replace_na(-9999)
Access_data$D2_5to5 <- Access_data$D2_5to5 |> replace_na(-9999)
Access_data$D5to10 <- Access_data$D5to10 |> replace_na(-9999)
Access_data$D10to15 <- Access_data$D15to20 |> replace_na(-9999)
Access_data$D15to20 <- Access_data$D15to20 |> replace_na(-9999)
Access_data$D20to25 <- Access_data$D20to25 |> replace_na(-9999)
Access_data$D25to30 <- Access_data$D25to30 |> replace_na(-9999)
Access_data$D30to35 <- Access_data$D30to35 |> replace_na(-9999)
Access_data$D35to40 <- Access_data$D35to40 |> replace_na(-9999)
Access_data$Dgt40 <- Access_data$Dgt40 |> replace_na(-9999)
glimpse(Access_data)
# Rename columns using DiamID values
Access_data$C0 <- Access_data$ShrubClump
Access_data$C1 <- Access_data$D0to1
Access_data$C2 <- Access_data$D1to2_5
Access_data$C3 <- Access_data$D2_5to5
Access_data$C4 <- Access_data$D5to10
Access_data$C5 <- Access_data$D15to20
Access_data$C6 <- Access_data$D15to20
Access_data$C7 <- Access_data$D20to25
Access_data$C8 <- Access_data$D25to30
Access_data$C9 <- Access_data$D30to35
Access_data$C10 <- Access_data$D35to40
Access_data$BIG <- Access_data$Dgt40
glimpse(Access_data)
glimpse(Access_data)
# Generate EventID from EditDate
Access_data <- Access_data |>
          mutate( EventID = str_c( 'CUVAWetlnd', EditDate)) |>
            mutate(EventID = str_replace_all(EventID, "-", ""))
glimpse(Access_data)
# Generate EventID from EditDate
Access_data <- Access_data |>
  mutate( EventID = str_c( 'CUVAWetlnd', EditDate)) |>
  mutate(EventID = str_replace_all(EventID, "-", ""))
glimpse(Access_data)
# create the LocationID column from the FeatureID column
# and a lookup table from HTLNWetlands
Locations_LUT <- read_csv("Locations_LUT.csv")
glimpse(Locations_LUT)
Access_data <- Access_data |>
  left_join(Locations_LUT, join_by(FeatureID))
glimpse(Access_data)
# create an output file with a timestamp
# and include it in the dataframe for reference
Access_data <- Access_data |>
  mutate(
    My_timestamp = now(),
    My_timestamp = str_replace_all(My_timestamp, " ", "_"),
    My_timestamp = str_replace_all(My_timestamp, ":", ""),
    My_timestamp = substr(My_timestamp, 1, 17),
    Timestamp = str_c("VIBI_woody_", My_timestamp)
  )
glimpse(Access_data)
q()
